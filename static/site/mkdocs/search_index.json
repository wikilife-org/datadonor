{
    "docs": [
        {
            "location": "/", 
            "text": "ResearckKit API\n\n\nDocumentation\n\n\nApple\u2019s researchKit backend must have the following endpoints:\n\n\nAuthentication\n\n\nSign Up\n\n\nDoes not require authentication. User will be sent an email with a link to verify his or her email; this will need to happen via the web application.\n\n\n\n\n\n\n\n\nPOST\n\n\n/api/v1/auth/signUp\n\n\n\n\n\n\n\n\n\n\n\n\nauth\n\n\n\n\nall users\n\n\n\n\n\n\nrequest body\n\n\n\n\nSignUp\n\n\n\n\n\n\nresponse\n\n\n473\n\n\n{\"message\": \"The study '\n' has reached the limit of allowed participants.\"}\n\n\n\n\n\n\nresponse\n\n\n201\n\n\n{\"message\": \"Signed up.\" }\n\n\n\n\n\n\n\n\nSignUp Object\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nstudy\n\n\nString\n\n\nThe study identifier under which the user is creating an account\n\n\n\n\n\n\nemail\n\n\nString\n\n\nCannot be change once created\n\n\n\n\n\n\nusername\n\n\nString\n\n\n\n\n\n\n\n\npassword\n\n\nString\n\n\nConstrains for an acceptable password can be set per study.\n\n\n\n\n\n\ntype\n\n\nString\n\n\n\"SignUp\"\n\n\n\n\n\n\n\n\nSign In\n\n\n\n\n\n\n\n\nPOST\n\n\n/api/v1/auth/signIn\n\n\n\n\n\n\n\n\n\n\n\n\nauth\n\n\n\n\nall users\n\n\n\n\n\n\nrequest body\n\n\n\n\nSignIn\n\n\n\n\n\n\nresponse\n\n\n200\n\n\nUserSessionInfo\n\n\n\n\n\n\nresponse\n\n\n404\n\n\nCredentials incorrect or missing\n\n\n\n\n\n\nresponse\n\n\n412\n\n\nUser has not consented to research\n\n\n\n\n\n\n\n\nSignIn Object\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nstudy\n\n\nString\n\n\nThe identifier for the study under which the user is signing in\n\n\n\n\n\n\nusername\n\n\nString\n\n\n\n\n\n\n\n\npassword\n\n\nString\n\n\n\n\n\n\n\n\ntype\n\n\nString\n\n\n\"SignIn\"\n\n\n\n\n\n\n\n\nConsent API\n\n\nMany API calls will not be functional until the user establishes consent. \nConsent to research\n\n\n\n\n\n\n\n\nPOST\n\n\n/api/v1/consent\n\n\n\n\n\n\n\n\n\n\n\n\nauth\n\n\n\n\nall users\n\n\n\n\n\n\nrequest body\n\n\n\n\nConsentSignature\n\n\n\n\n\n\nresponse\n\n\n473\n\n\n{\"message\": \"The study '\n' has reached the limit of allowed participants.\"}\n\n\n\n\n\n\nresponse\n\n\n400\n\n\nWill return an error if the ConsentSignature JSON does not include a \"scope\" property; this property must be set to a valid value declaring the scope of data sharing allowed by this participant.\n\n\n\n\n\n\nresponse\n\n\n201\n\n\n{ \"message\": \"Consent to research has been recorded.\" }\n\n\n\n\n\n\n\n\nConsentSignature Object\n\n\nAs part of the consent process, participants submit a decision on how widely they will share their medical information with researchers.\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nThe user's \"signature\", recorded exactly as entered\n\n\n\n\n\n\nbirthdate\n\n\nString\n\n\nThe user's birthday in the format \"YYYY-MM-DD\".\n\n\n\n\n\n\nimageData\n\n\nString\n\n\nImage file of the user's signature, as a Base64 encoded string. Should be less than 10kb. Optional.\n\n\n\n\n\n\nimageMimeType\n\n\nString\n\n\nMIME type of the image data (ex: \"image/png\"). Optional\n\n\n\n\n\n\nscope\n\n\nString\n\n\nRequired.\n This property must have one of three values:   \"no_sharing\";\"sponsors_and_partners\";\"all_qualified_researchers\"\n\n\n\n\n\n\ntype\n\n\nString\n\n\n\"ConsentSignature\"\n\n\n\n\n\n\n\n\nGet all tasks\n\n\nGets all available, started, or scheduled tasks for a user. \n\n\nThe \"until\" parameter allows you to retrieve tasks that are scheduled in the future up to the timestamp supplied. \n\n\nThe timestamp is a valid ISO 8601 date and time string (any timezone).\n\n\n\n\n\n\n\n\nGET\n\n\n/api/v1/tasks?until={timestamp}\n\n\n\n\n\n\n\n\n\n\n\n\nauth\n\n\n\n\nconsented users\n\n\n\n\n\n\nresponse\n\n\n200\n\n\n{ \"items\": Task[], \"total\": items.length}\n\n\n\n\n\n\n\n\nTask\n\n\nTask Object\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nString\n\n\nA unique identifier for the task\n\n\n\n\n\n\nstartedOn\n\n\nDate\n\n\nAn ISO 8601 date and time string indicating when this task was started by the participant.\n\n\n\n\n\n\nfinishedOn\n\n\nDate\n\n\nAn ISO 8601 date and time string indicating when this task was completed by the participant.\n\n\n\n\n\n\nstatus\n\n\nString\n\n\nscheduled, available, started, finished, expired, deleted\n\n\n\n\n\n\ntype\n\n\nString\n\n\n\"Task\"\n\n\n\n\n\n\n\n\nList published versions of all surveys\n\n\nReturn the published version of each survey. \n\n\n\n\n\n\n\n\n\n\nGET\n\n\n/researchers/v1/surveys/published\n\n\n\n\n\n\n\n\n\n\nauth\n\n\n\n\nadministrators, researchers\n\n\n\n\n\n\nresponse\n\n\n\n\n{ \"items\": Survey[], \"total\": items.length }\n\n\n\n\n\n\n\n\nSurvey Responses\n\n\nSurveys are issued to users through the activity system. \n\n\nThis embeds an instance of a Survey with its questions, which can be used to render the UI.\n\n\nGet a survey\n\n\nThese URLs will be referenced by schedules and activities prompting a user to take a survey. \n\n\n\n\n\n\n\n\n\n\nGET\n\n\n/api/v1/surveys/{surveyGuid}\n\n\n\n\n\n\n\n\n\n\nauth\n\n\n\n\nconsented users\n\n\n\n\n\n\nresponse\n\n\n200\n\n\nSurvey\n\n\n\n\n\n\n\n\nSurvey\n\n\nSurvey Object\n\n\n\n\n\n\n\n\nField Name\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nThe name of this survey (required). The name can be changed in later versions.\n\n\n\n\n\n\nguid\n\n\nString\n\n\nA unique identifier for this survey.\n\n\n\n\n\n\nidentifier\n\n\nString\n\n\nA private name for the survey.\n\n\n\n\n\n\ncreatedOn\n\n\nString\n\n\nThe ISO 8601 date on which this version of this survey was created.\n\n\n\n\n\n\nmodifiedOn\n\n\nNumber\n\n\nThe date and time when this version of the survey was last modified.\n\n\n\n\n\n\npublished\n\n\nboolean\n\n\nIs this survey version published?\n\n\n\n\n\n\nelements\n\n\nArray\n\n\nAn ordered array of Survey objects\n\n\n\n\n\n\ntype\n\n\nString\n\n\n\"Survey\"\n\n\n\n\n\n\n\n\nSubmit answers in response to a survey\n\n\nUsing this API call, no survey response object is needed to submit answers to a survey. \n\n\nThe client can create and close a survey instance by submitting all the answers at once to this API. \n\n\n\n\n\n\n\n\n\n\nPOST\n\n\n/api/v1/surveys/{surveyGuid}\n\n\n\n\n\n\n\n\n\n\nauth\n\n\n\n\nconsented users\n\n\n\n\n\n\nrequest\n\n\n\n\nSurveyAnswer[]\n\n\n\n\n\n\nresponse\n\n\n201\n\n\n\n\n\n\n\n\n\n\nSurveyAnswer Object\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\nRequired\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nquestionGuid\n\n\nString\n\n\nrequired\n\n\nThe GUID of the question being answered.\n\n\n\n\n\n\ndeclined\n\n\nboolean\n\n\nrequired\n\n\nIf present and set to true, this question was declined by the user.\n\n\n\n\n\n\nanswers\n\n\nString[]\n\n\n\n\nIf the question allows multiple answers, then all the answers as strings in an array.\n\n\n\n\n\n\nansweredOn\n\n\nNumber\n\n\nrequired\n\n\nDate and time of answer (ISO 8601 date and time value)\n\n\n\n\n\n\ntype\n\n\nString\n\n\n\n\n\"SurveyAnswer\"\n\n\n\n\n\n\n\n\nSample JSON\n\n\n      {   \n         \nquestionGuid\n:\n020173a4-7771-4ec2-8da1-9039b05afa0b\n,\n         \nanswers\n:[\ntrue\n],\n         \nansweredOn\n:\n2014-10-10T17:10:03.553Z\n,\n         \nclient\n:\ntest\n,\n         \ndeclined\n:false,\n         \ntype\n:\nSurveyAnswer\n\n      }\n\n\n\n\n\nHealthKit Data Post\n\n\nUsing the API to send healthKit data.\nThe Client can post healthKit data related.\n\n\n\n\n\n\n\n\n\n\nPOST\n\n\n/api/v1/data/\n\n\n\n\n\n\n\n\n\n\nauth\n\n\n\n\nconsented users\n\n\n\n\n\n\nrequest\n\n\n\n\nHealthKitData[]\n\n\n\n\n\n\nresponse\n\n\n201\n\n\n\n\n\n\n\n\n\n\nHealthKitData Object\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\nRequired\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nvariable\n\n\nString\n\n\nrequired\n\n\nname of the healthKit variable\n\n\n\n\n\n\nvalue\n\n\nString,Float\n\n\nrequired\n\n\nthe value of the variable\n\n\n\n\n\n\ntype\n\n\nString\n\n\n\n\n\"HealthKitData\"\n\n\n\n\n\n\ncreatedOn\n\n\nString\n\n\n\n\nThe ISO 8601 date on which this version of this survey was created.", 
            "title": "Home"
        }, 
        {
            "location": "/#researckkit-api", 
            "text": "", 
            "title": "ResearckKit API"
        }, 
        {
            "location": "/#documentation", 
            "text": "Apple\u2019s researchKit backend must have the following endpoints:", 
            "title": "Documentation"
        }, 
        {
            "location": "/#authentication", 
            "text": "", 
            "title": "Authentication"
        }, 
        {
            "location": "/#sign-up", 
            "text": "Does not require authentication. User will be sent an email with a link to verify his or her email; this will need to happen via the web application.     POST  /api/v1/auth/signUp       auth   all users    request body   SignUp    response  473  {\"message\": \"The study ' ' has reached the limit of allowed participants.\"}    response  201  {\"message\": \"Signed up.\" }     SignUp Object     Field  Type  Description      study  String  The study identifier under which the user is creating an account    email  String  Cannot be change once created    username  String     password  String  Constrains for an acceptable password can be set per study.    type  String  \"SignUp\"", 
            "title": "Sign Up"
        }, 
        {
            "location": "/#sign-in", 
            "text": "POST  /api/v1/auth/signIn       auth   all users    request body   SignIn    response  200  UserSessionInfo    response  404  Credentials incorrect or missing    response  412  User has not consented to research     SignIn Object     Field  Type  Description      study  String  The identifier for the study under which the user is signing in    username  String     password  String     type  String  \"SignIn\"", 
            "title": "Sign In"
        }, 
        {
            "location": "/#consent-api", 
            "text": "Many API calls will not be functional until the user establishes consent. \nConsent to research     POST  /api/v1/consent       auth   all users    request body   ConsentSignature    response  473  {\"message\": \"The study ' ' has reached the limit of allowed participants.\"}    response  400  Will return an error if the ConsentSignature JSON does not include a \"scope\" property; this property must be set to a valid value declaring the scope of data sharing allowed by this participant.    response  201  { \"message\": \"Consent to research has been recorded.\" }     ConsentSignature Object  As part of the consent process, participants submit a decision on how widely they will share their medical information with researchers.     Field  Type  Description      name  String  The user's \"signature\", recorded exactly as entered    birthdate  String  The user's birthday in the format \"YYYY-MM-DD\".    imageData  String  Image file of the user's signature, as a Base64 encoded string. Should be less than 10kb. Optional.    imageMimeType  String  MIME type of the image data (ex: \"image/png\"). Optional    scope  String  Required.  This property must have one of three values:   \"no_sharing\";\"sponsors_and_partners\";\"all_qualified_researchers\"    type  String  \"ConsentSignature\"", 
            "title": "Consent API"
        }, 
        {
            "location": "/#get-all-tasks", 
            "text": "Gets all available, started, or scheduled tasks for a user.   The \"until\" parameter allows you to retrieve tasks that are scheduled in the future up to the timestamp supplied.   The timestamp is a valid ISO 8601 date and time string (any timezone).     GET  /api/v1/tasks?until={timestamp}       auth   consented users    response  200  { \"items\": Task[], \"total\": items.length}", 
            "title": "Get all tasks"
        }, 
        {
            "location": "/#task", 
            "text": "Task Object     Field  Type  Description      id  String  A unique identifier for the task    startedOn  Date  An ISO 8601 date and time string indicating when this task was started by the participant.    finishedOn  Date  An ISO 8601 date and time string indicating when this task was completed by the participant.    status  String  scheduled, available, started, finished, expired, deleted    type  String  \"Task\"", 
            "title": "Task"
        }, 
        {
            "location": "/#list-published-versions-of-all-surveys", 
            "text": "Return the published version of each survey.       GET  /researchers/v1/surveys/published      auth   administrators, researchers    response   { \"items\": Survey[], \"total\": items.length }", 
            "title": "List published versions of all surveys"
        }, 
        {
            "location": "/#survey-responses", 
            "text": "Surveys are issued to users through the activity system.   This embeds an instance of a Survey with its questions, which can be used to render the UI.", 
            "title": "Survey Responses"
        }, 
        {
            "location": "/#get-a-survey", 
            "text": "These URLs will be referenced by schedules and activities prompting a user to take a survey.       GET  /api/v1/surveys/{surveyGuid}      auth   consented users    response  200  Survey", 
            "title": "Get a survey"
        }, 
        {
            "location": "/#survey", 
            "text": "Survey Object     Field Name  Type  Description      name  String  The name of this survey (required). The name can be changed in later versions.    guid  String  A unique identifier for this survey.    identifier  String  A private name for the survey.    createdOn  String  The ISO 8601 date on which this version of this survey was created.    modifiedOn  Number  The date and time when this version of the survey was last modified.    published  boolean  Is this survey version published?    elements  Array  An ordered array of Survey objects    type  String  \"Survey\"", 
            "title": "Survey"
        }, 
        {
            "location": "/#submit-answers-in-response-to-a-survey", 
            "text": "Using this API call, no survey response object is needed to submit answers to a survey.   The client can create and close a survey instance by submitting all the answers at once to this API.       POST  /api/v1/surveys/{surveyGuid}      auth   consented users    request   SurveyAnswer[]    response  201      SurveyAnswer Object     Field  Type  Required  Description      questionGuid  String  required  The GUID of the question being answered.    declined  boolean  required  If present and set to true, this question was declined by the user.    answers  String[]   If the question allows multiple answers, then all the answers as strings in an array.    answeredOn  Number  required  Date and time of answer (ISO 8601 date and time value)    type  String   \"SurveyAnswer\"", 
            "title": "Submit answers in response to a survey"
        }, 
        {
            "location": "/#sample-json", 
            "text": "{   \n          questionGuid : 020173a4-7771-4ec2-8da1-9039b05afa0b ,\n          answers :[ true ],\n          answeredOn : 2014-10-10T17:10:03.553Z ,\n          client : test ,\n          declined :false,\n          type : SurveyAnswer \n      }", 
            "title": "Sample JSON"
        }, 
        {
            "location": "/#healthkit-data-post", 
            "text": "Using the API to send healthKit data.\nThe Client can post healthKit data related.      POST  /api/v1/data/      auth   consented users    request   HealthKitData[]    response  201      HealthKitData Object     Field  Type  Required  Description      variable  String  required  name of the healthKit variable    value  String,Float  required  the value of the variable    type  String   \"HealthKitData\"    createdOn  String   The ISO 8601 date on which this version of this survey was created.", 
            "title": "HealthKit Data Post"
        }, 
        {
            "location": "/about/", 
            "text": "Datadonors API\n\n\nAc imperet templo pervenientia liquit tenuere\n\n\nLorem markdownum inposita: \nait\n, Palatinae Cerambi; in\nbarba coniunx ille: hanc. Ferre color, futuri protinus iugalia terra Naryciamque\nquoniam, per. \nCum aquarum unam\n. Sua nec quae igni fuit surgere consuetas\nultima, deficiunt purpureum cesserat rutilos dolentem et \nponunt vix saepe\n.\nOmnes comitesque patriorum fuit, et adfuit te age reclinis amnis \nat\n.\n\n\nCaelo sparsuras omnibus est vocesque cuique cepit \nad tum\n religata, prole\nmulto, saxificos. Thybrin vestes inexcusabile sive avidas, in tempore \nfavillam\ntempus quoque\n, Olympi ad sors. Parvum damnum et sunt ferit\ncrinibus peccavimus ergo validisne versus respicit crederet in tibi! Primum fer\nde corniger cur fidem colunt inter in ire usque.\n\n\nDemere et alto\n\n\nQuid ulla auctor dederant, nil marmoreamque gerebat audis, quod muris in\nvetustas terram manibusque arentis levis, si! Totaeque flammae vivatis tollens:\nmitisque Belo, denique tandem \nin\n ab, non undis et sollicitare \ntutus\nadductis\n cogitat. Cum manibusque coronis manet vicisti illa arma viscera\nagendo \nquam\n es nil cura mutati; a\nvultu non spectante.\n\n\n\n\nLinguam certos constitit ubi Acheloiadumque cives, videri dixi metuam monilia\nparentes se magnum parabat iudice fatorum patietur. Per oculos invita adunca e\ncerte usus? Multis ante doctior de poenam nymphae tempora; in annis.\nLinguisque laqueosque natis. Aequor omnis requiris: utinamque scelerata: ergo\nprohibent aetas non genitor superi si dies populos.\n\n\n\n\nMagni et curvum perque\n\n\nTela narrare nec limen tu nare ne gaudia quoque Eumenides gravitate poplitibus\npostquam factaque tota. Parente fluctibus dixit abit crede huc \nora\n, quid limus\ndixisti. Ex acutae dubitat arcuit maternaque auro esse ut robore sanguinis\ntangit.\n\n\nAgros in haec cognitus perque fiuntque indicium\n\n\nContenta ferebat institerant unde, mea credita, quae quid \ndebilis tu\n nubes\nflaventibus tamen, et volucri. Nihil vel fratri quippe citharam saecula. Factum\nIdaque Eumelique es aera vicerat bisque Cadmeida sperat intrepidum et petam! Ab\nalta confecta simul.\n\n\nMitis et proles flumine et subsedit nescis stellatus illas Agamemnonis taurus\nnumerumque luctus fecit se. Gaudia torrentur omnes aliis, ponit labori sed\nmateria tracti abductas, ora arduus caput ad non quoque divorum. Conscia vimque;\n\nfax\n cum sanguine, melius parva,\nsilentia, ait fulgebant numina Melampus.\n\n\nIlla altaque vultus humili? Ille me ipse, medullis!", 
            "title": "About"
        }, 
        {
            "location": "/about/#datadonors-api", 
            "text": "", 
            "title": "Datadonors API"
        }, 
        {
            "location": "/about/#ac-imperet-templo-pervenientia-liquit-tenuere", 
            "text": "Lorem markdownum inposita:  ait , Palatinae Cerambi; in\nbarba coniunx ille: hanc. Ferre color, futuri protinus iugalia terra Naryciamque\nquoniam, per.  Cum aquarum unam . Sua nec quae igni fuit surgere consuetas\nultima, deficiunt purpureum cesserat rutilos dolentem et  ponunt vix saepe .\nOmnes comitesque patriorum fuit, et adfuit te age reclinis amnis  at .  Caelo sparsuras omnibus est vocesque cuique cepit  ad tum  religata, prole\nmulto, saxificos. Thybrin vestes inexcusabile sive avidas, in tempore  favillam\ntempus quoque , Olympi ad sors. Parvum damnum et sunt ferit\ncrinibus peccavimus ergo validisne versus respicit crederet in tibi! Primum fer\nde corniger cur fidem colunt inter in ire usque.", 
            "title": "Ac imperet templo pervenientia liquit tenuere"
        }, 
        {
            "location": "/about/#demere-et-alto", 
            "text": "Quid ulla auctor dederant, nil marmoreamque gerebat audis, quod muris in\nvetustas terram manibusque arentis levis, si! Totaeque flammae vivatis tollens:\nmitisque Belo, denique tandem  in  ab, non undis et sollicitare  tutus\nadductis  cogitat. Cum manibusque coronis manet vicisti illa arma viscera\nagendo  quam  es nil cura mutati; a\nvultu non spectante.   Linguam certos constitit ubi Acheloiadumque cives, videri dixi metuam monilia\nparentes se magnum parabat iudice fatorum patietur. Per oculos invita adunca e\ncerte usus? Multis ante doctior de poenam nymphae tempora; in annis.\nLinguisque laqueosque natis. Aequor omnis requiris: utinamque scelerata: ergo\nprohibent aetas non genitor superi si dies populos.", 
            "title": "Demere et alto"
        }, 
        {
            "location": "/about/#magni-et-curvum-perque", 
            "text": "Tela narrare nec limen tu nare ne gaudia quoque Eumenides gravitate poplitibus\npostquam factaque tota. Parente fluctibus dixit abit crede huc  ora , quid limus\ndixisti. Ex acutae dubitat arcuit maternaque auro esse ut robore sanguinis\ntangit.", 
            "title": "Magni et curvum perque"
        }, 
        {
            "location": "/about/#agros-in-haec-cognitus-perque-fiuntque-indicium", 
            "text": "Contenta ferebat institerant unde, mea credita, quae quid  debilis tu  nubes\nflaventibus tamen, et volucri. Nihil vel fratri quippe citharam saecula. Factum\nIdaque Eumelique es aera vicerat bisque Cadmeida sperat intrepidum et petam! Ab\nalta confecta simul.  Mitis et proles flumine et subsedit nescis stellatus illas Agamemnonis taurus\nnumerumque luctus fecit se. Gaudia torrentur omnes aliis, ponit labori sed\nmateria tracti abductas, ora arduus caput ad non quoque divorum. Conscia vimque; fax  cum sanguine, melius parva,\nsilentia, ait fulgebant numina Melampus.  Illa altaque vultus humili? Ille me ipse, medullis!", 
            "title": "Agros in haec cognitus perque fiuntque indicium"
        }, 
        {
            "location": "/example/", 
            "text": "An h1 header\n\n\nParagraphs are separated by a blank line.\n\n\n2nd paragraph. \nItalic\n, \nbold\n, and \nmonospace\n. Itemized lists\nlook like:\n\n\n\n\nthis one\n\n\nthat one\n\n\nthe other one\n\n\n\n\nNote that --- not considering the asterisk --- the actual text\ncontent starts at 4-columns in.\n\n\n\n\nBlock quotes are\nwritten like so.\n\n\nThey can span multiple paragraphs,\nif you like.\n\n\n\n\nUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\nin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\nUnicode is supported. \u263a\n\n\nAn h2 header\n\n\nHere's a numbered list:\n\n\n\n\nfirst item\n\n\nsecond item\n\n\nthird item\n\n\n\n\nNote again how the actual text starts at 4 columns in (4 characters\nfrom the left side). Here's a code sample:\n\n\n# Let me re-iterate ...\nfor i in 1 .. 10 { do-something(i) }\n\n\n\nAs you probably guessed, indented 4 spaces. By the way, instead of\nindenting the block, you can use delimited blocks, if you like:\n\n\ndefine foobar() {\n    print \nWelcome to flavor country!\n;\n}\n\n\n\n\n(which makes copying \n pasting easier). You can optionally mark the\ndelimited block for Pandoc to syntax highlight it:\n\n\nimport time\n# Quick, count to ten!\nfor i in range(10):\n    # (but not *too* quick)\n    time.sleep(0.5)\n    print i\n\n\n\n\nAn h3 header\n\n\nNow a nested list:\n\n\n\n\n\n\nFirst, get these ingredients:\n\n\n\n\ncarrots\n\n\ncelery\n\n\nlentils\n\n\n\n\n\n\n\n\nBoil some water.\n\n\n\n\n\n\nDump everything in the pot and follow\n    this algorithm:\n\n\nfind wooden spoon\nuncover pot\nstir\ncover pot\nbalance wooden spoon precariously on pot handle\nwait 10 minutes\ngoto first step (or shut off burner when done)\n\n\n\nDo not bump wooden spoon or it will fall.\n\n\n\n\n\n\nNotice again how text always lines up on 4-space indents (including\nthat last line which continues item 3 above).\n\n\nHere's a link to \na website\n, to a \nlocal\ndoc\n, and to a \nsection heading in the current\ndoc\n. Here's a footnote [^1].\n\n\n[^1]: Footnote text goes here.\n\n\nTables can look like this:\n\n\nsize  material      color\n\n\n\n\n9     leather       brown\n10    hemp canvas   natural\n11    glass         transparent\n\n\nTable: Shoes, their sizes, and what they're made of\n\n\n(The above is the caption for the table.) Pandoc also supports\nmulti-line tables:\n\n\n\n\nkeyword   text\n\n\n\n\nred       Sunsets, apples, and\n          other red or reddish\n          things.\n\n\ngreen     Leaves, grass, frogs\n          and other things it's\n          not easy being.\n\n\n\n\nA horizontal rule follows.\n\n\n\n\nHere's a definition list:\n\n\napples\n  : Good for making applesauce.\noranges\n  : Citrus!\ntomatoes\n  : There's no \"e\" in tomatoe.\n\n\nAgain, text is indented 4 spaces. (Put a blank line between each\nterm/definition pair to spread things out more.)\n\n\nHere's a \"line block\":\n\n\n| Line one\n|   Line too\n| Line tree\n\n\nand images can be specified like so:\n\n\n\n\nInline math equations go in like so: $\\omega = d\\phi / dt$. Display\nmath should get its own line and be put in in double-dollarsigns:\n\n\n$$I = \\int \\rho R^{2} dV$$\n\n\nAnd note that you can backslash-escape any punctuation characters\nwhich you wish to be displayed literally, ex.: `foo`, *bar*, etc.", 
            "title": "Examples"
        }, 
        {
            "location": "/example/#an-h1-header", 
            "text": "Paragraphs are separated by a blank line.  2nd paragraph.  Italic ,  bold , and  monospace . Itemized lists\nlook like:   this one  that one  the other one   Note that --- not considering the asterisk --- the actual text\ncontent starts at 4-columns in.   Block quotes are\nwritten like so.  They can span multiple paragraphs,\nif you like.   Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\nin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\nUnicode is supported. \u263a", 
            "title": "An h1 header"
        }, 
        {
            "location": "/example/#an-h2-header", 
            "text": "Here's a numbered list:   first item  second item  third item   Note again how the actual text starts at 4 columns in (4 characters\nfrom the left side). Here's a code sample:  # Let me re-iterate ...\nfor i in 1 .. 10 { do-something(i) }  As you probably guessed, indented 4 spaces. By the way, instead of\nindenting the block, you can use delimited blocks, if you like:  define foobar() {\n    print  Welcome to flavor country! ;\n}  (which makes copying   pasting easier). You can optionally mark the\ndelimited block for Pandoc to syntax highlight it:  import time\n# Quick, count to ten!\nfor i in range(10):\n    # (but not *too* quick)\n    time.sleep(0.5)\n    print i  An h3 header  Now a nested list:    First, get these ingredients:   carrots  celery  lentils     Boil some water.    Dump everything in the pot and follow\n    this algorithm:  find wooden spoon\nuncover pot\nstir\ncover pot\nbalance wooden spoon precariously on pot handle\nwait 10 minutes\ngoto first step (or shut off burner when done)  Do not bump wooden spoon or it will fall.    Notice again how text always lines up on 4-space indents (including\nthat last line which continues item 3 above).  Here's a link to  a website , to a  local\ndoc , and to a  section heading in the current\ndoc . Here's a footnote [^1].  [^1]: Footnote text goes here.  Tables can look like this:  size  material      color   9     leather       brown\n10    hemp canvas   natural\n11    glass         transparent  Table: Shoes, their sizes, and what they're made of  (The above is the caption for the table.) Pandoc also supports\nmulti-line tables:   keyword   text   red       Sunsets, apples, and\n          other red or reddish\n          things.  green     Leaves, grass, frogs\n          and other things it's\n          not easy being.   A horizontal rule follows.   Here's a definition list:  apples\n  : Good for making applesauce.\noranges\n  : Citrus!\ntomatoes\n  : There's no \"e\" in tomatoe.  Again, text is indented 4 spaces. (Put a blank line between each\nterm/definition pair to spread things out more.)  Here's a \"line block\":  | Line one\n|   Line too\n| Line tree  and images can be specified like so:   Inline math equations go in like so: $\\omega = d\\phi / dt$. Display\nmath should get its own line and be put in in double-dollarsigns:  $$I = \\int \\rho R^{2} dV$$  And note that you can backslash-escape any punctuation characters\nwhich you wish to be displayed literally, ex.: `foo`, *bar*, etc.", 
            "title": "An h2 header"
        }
    ]
}